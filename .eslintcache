[{"/home/rcampion/git/react-js-contacts/src/index.js":"1","/home/rcampion/git/react-js-contacts/src/App.js":"2","/home/rcampion/git/react-js-contacts/src/reportWebVitals.js":"3","/home/rcampion/git/react-js-contacts/src/components/add-contact.component.js":"4","/home/rcampion/git/react-js-contacts/src/components/contact.component.js":"5","/home/rcampion/git/react-js-contacts/src/components/contacts-list.component.js":"6","/home/rcampion/git/react-js-contacts/src/services/contact.service.js":"7","/home/rcampion/git/react-js-contacts/src/http-common.js":"8"},{"size":397,"mtime":1611773935229,"results":"9","hashOfConfig":"10"},{"size":1359,"mtime":1611883151469,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1611768548995,"results":"12","hashOfConfig":"10"},{"size":3935,"mtime":1611929429714,"results":"13","hashOfConfig":"10"},{"size":5012,"mtime":1611929863159,"results":"14","hashOfConfig":"10"},{"size":12542,"mtime":1611930866132,"results":"15","hashOfConfig":"10"},{"size":583,"mtime":1611887537317,"results":"16","hashOfConfig":"10"},{"size":240,"mtime":1611930866132,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"21"},"t52yxy",{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"21"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"21"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/rcampion/git/react-js-contacts/src/index.js",["38"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { BrowserRouter } from \"react-router-dom\";\n\n//import * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n//serviceWorker.unregister();\n",["39","40"],"/home/rcampion/git/react-js-contacts/src/App.js",["41"],"import React, { Component } from \"react\";\nimport { Switch, Route, Link } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport logo from './logo.svg';\nimport \"./App.css\";\n\nimport ContactsList from \"./components/contacts-list.component\";\nimport AddContact from \"./components/add-contact.component\";\nimport Contact from \"./components/contact.component\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\n          <a href=\"/contacts\" className=\"navbar-brand\">\n            ZdsLogic Technologies\n          </a>\n          <div className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to={\"/contacts\"} className=\"nav-link\">\n                Contacts\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to={\"/add\"} className=\"nav-link\">\n                Add\n              </Link>\n            </li>\n          </div>\n        </nav>\n\n        <div className=\"container mt-3\">\n          <Switch>\n            <Route exact path={[\"/\", \"/contacts\"]} component={ContactsList} />\n            <Route exact path=\"/add\" component={AddContact} />\n            <Route path=\"/contacts/:id\" component={Contact} />\n          </Switch>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","/home/rcampion/git/react-js-contacts/src/reportWebVitals.js",[],"/home/rcampion/git/react-js-contacts/src/components/add-contact.component.js",[],"/home/rcampion/git/react-js-contacts/src/components/contact.component.js",[],"/home/rcampion/git/react-js-contacts/src/components/contacts-list.component.js",["42","43","44","45"],"import React, { Component } from \"react\";\nimport axios from 'axios';\nimport Pagination from \"react-js-pagination\";\n//import Pagination from \"@material-ui/lab/Pagination\";\n//import TutorialDataService from \"../services/tutorial.service\";\nimport { Link } from \"react-router-dom\";\n// import { PaginationPage, PaginationPropertySort } from '../interface/pagination';\n\nexport default class ContactsList extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangeSearchTitle = this.onChangeSearchTitle.bind(this);\n    // this.retrieveTutorials = this.retrieveTutorials.bind(this);\n    this.refreshList = this.refreshList.bind(this);\n    this.setActiveContact = this.setActiveContact.bind(this);\n    // this.removeAllTutorials = this.removeAllTutorials.bind(this);\n    this.handlePageChange = this.handlePageChange.bind(this);\n    this.handlePageSizeChange = this.handlePageSizeChange.bind(this);\n\n    this.searchTitle = this.searchTitle.bind(this);\n\n    this.state = {\n      contacts: [],\n      currentContact: null,\n      currentIndex: -1,\n      searchTitle: \"\",\n\n      page: 1,\n      count: 0,\n      itemsCountPerPage: 3,\n      sort: \"\",\n\n      //articlesDetails: [],\n      activePage: 0,\n      totalPages: null,\n      //itemsCountPerPage: null,\n      totalItemsCount: null\n    };\n\n    this.pageSizes = [3, 6, 9];\n\n    this.findContactsWithSortAndFilter = this.findContactsWithSortAndFilter.bind(this);\n  }\n\n  componentDidMount() {\n    //this.retrieveTutorials();\n    this.findContactsWithSortAndFilter(this.state.searchTitle, this.state.sort, this.state.activePage, this.state.itemsCountPerPage);\n  }\n\n  onChangeSearchTitle(e) {\n    const searchTitle = e.target.value;\n\n    this.setState({\n      searchTitle: searchTitle\n    });\n  }\n\n  getRequestParams(searchTitle, page, itemsCountPerPage) {\n    let params = {};\n\n    if (searchTitle) {\n      params[\"search\"] = searchTitle;\n    }\n\n    if (page) {\n      params[\"page\"] = page - 1;\n    }\n\n    if (itemsCountPerPage) {\n      params[\"itemsCountPerPage\"] = itemsCountPerPage;\n    }\n\n    return params;\n  }\n\n  //findContactsWithSortAndFilter(search, page, itemsCountPerPage) {\n\n  findContactsWithSortAndFilter(\n\n    filter = '', sort = '',\n    pageNumber = 0, pageSize = 3) {\n\n    //const apiUrl = `http://localhost:8085/dashboard-server/api/contact?page=${pageNumber}&size=${pageSize}`;\n    let apiUrl = 'http://localhost:8081/resource-server/api/contact';\n\n    const params = { page: pageNumber, size: pageSize };\n    if (sort != null) {\n      params.sort = sort.property + ',' + sort.direction;\n    }\n\n    let sortTest = 'asc';\n    //if (sort.property !== '') {\n    //  sortTest = sort.property + ',' + sort.direction;\n    //}\n    let search = '';\n    if (filter !== '') {\n      apiUrl = 'http://localhost:8081/resource-server/api/contact/search';\n      // search = 'firstName==' + filter + '* or ' + 'lastName==' + filter + '*';\n      // search = 'lastName==' + filter + '*';\n      search = 'firstName==' + filter + '* or ' + 'lastName==' + filter + '* or ' + 'company==' + filter + '*';\n    }\n\n    axios.get(apiUrl, {\n      params: {\n        'search': search,\n        'sort': sortTest,\n        'page': pageNumber.toString(),\n        'size': pageSize.toString()\n      }\n    })\n\n      .then(response => {\n\n        const totalPages = response.data.totalPages;\n        const itemsCountPerPage = response.data.size;\n        const totalItemsCount = response.data.totalElements;\n\n        this.setState({ totalPages: totalPages })\n        this.setState({ totalItemsCount: totalItemsCount })\n        this.setState({ itemsCountPerPage: itemsCountPerPage })\n\n        const results = response.data.content;\n\n        const updatedResults = results.map(results => {\n\n          var timestamp = new Date(results.pubDate)\n          var dateString = timestamp.toGMTString()\n          return {\n            ...results, dateString\n          }\n        });\n\n        this.setState({ contacts: updatedResults });\n        console.log(updatedResults);\n        console.log(this.state.activePage);\n        console.log(this.state.itemsCountPerPage);\n\n      }\n      );\n  }\n\n  /*\n  \n  retrieveTutorials() {\n    const { searchTitle, page, itemsCountPerPage } = this.state;\n    const params = this.getRequestParams(searchTitle, page, itemsCountPerPage);\n  \n    TutorialDataService.getAll(params)\n      .then((response) => {\n        const tutorials = response.data.content;\n        const totalPages = response.data.totalPages;\n  \n        this.setState({\n          tutorials: tutorials,\n          count: totalPages,\n        });\n        console.log(response.data);\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  }\n  \n  \n    handlePageChange(event, value) {\n      this.setState(\n        {\n          page: value,\n        },\n        () => {\n          //this.retrieveTutorials();\n          this.findContactsWithSortAndFilter(this.state.activePage);\n        }\n      );\n    }\n  */\n\n  handlePageChange(pageNumber) {\n    console.log(`active page is ${pageNumber}`);\n\n    this.setState({ activePage: pageNumber -1 });\n\n    // this.state.activePage = pageNumber;\n\n    //this.findContactsWithSortAndFilter(pageNumber)\n    this.findContactsWithSortAndFilter(this.state.searchTitle, this.state.sort, pageNumber-1, this.state.itemsCountPerPage);\n\n  }\n\n  handlePageSizeChange(event) {\n    this.setState(\n      {\n        itemsCountPerPage: event.target.value,\n        page: 1\n      },\n      () => {\n        //this.retrieveTutorials();\n        this.findContactsWithSortAndFilter(this.state.searchTitle, this.state.sort, this.state.activePage -1, this.state.itemsCountPerPage);\n\n      }\n    );\n  }\n\n  refreshList() {\n    //this.retrieveTutorials();\n    this.findContactsWithSortAndFilter(this.state.activePage);\n\n    this.setState({\n      currentContact: null,\n      currentIndex: -1\n    });\n  }\n\n  setActiveContact(contact, index) {\n    this.setState({\n      currentContact: contact,\n      currentIndex: index\n    });\n  }\n\n/*\n  removeAllTutorials() {\n    TutorialDataService.deleteAll()\n      .then(response => {\n        console.log(response.data);\n        this.refreshList();\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n*/\n\n  searchTitle() {\n    this.findContactsWithSortAndFilter(this.state.searchTitle, this.state.sort, this.state.activePage -1, this.state.itemsCountPerPage);\n  }\n\n  render() {\n    /*\n      const { searchTitle, \n        tutorials, \n        currentContact, \n        currentIndex } = this.state;\n    */\n    const {\n      searchTitle,\n      contacts,\n      currentContact,\n      currentIndex,\n      page,\n      count,\n      itemsCountPerPage,\n    } = this.state;\n\n    return (\n      <div className=\"list row\">\n        <div className=\"col-md-8\">\n          <div className=\"input-group mb-3\">\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              placeholder=\"Search by title\"\n              value={searchTitle}\n              onChange={this.onChangeSearchTitle}\n            />\n            <div className=\"input-group-append\">\n              <button\n                className=\"btn btn-outline-secondary\"\n                type=\"button\"\n                onClick={this.searchTitle}\n              >\n                Search\n              </button>\n            </div>\n          </div>\n        </div>\n        <div className=\"col-md-6\">\n          <h4>Contacts List</h4>\n\n\n\n          <ul className=\"list-group\">\n            {contacts &&\n              contacts.map((contact, index) => (\n                <li\n                  className={\n                    \"list-group-item \" +\n                    (index === currentIndex ? \"active\" : \"\")\n                  }\n                  onClick={() => this.setActiveContact(contact, index)}\n                  key={index}\n                >\n                  {contact.firstName} {contact.lastName}\n                </li>\n              ))}\n          </ul>\n\n          <div className=\"mt-3\">\n            {\"Items per Page: \"}\n            <select onChange={this.handlePageSizeChange} value={itemsCountPerPage}>\n              {this.pageSizes.map((itemsCountPerPage) => (\n                <option key={itemsCountPerPage} value={itemsCountPerPage}>\n                  {itemsCountPerPage}\n                </option>\n              ))}\n            </select>\n\n            <Pagination\n              className=\"my-3\"\n              hideNavigation\n              activePage={this.state.activePage}\n              itemsCountPerPage={this.state.itemsCountPerPage}\n              totalItemsCount={this.state.totalItemsCount}\n              pageRangeDisplayed={10}\n              itemClass='page-item'\n              linkClass='btn btn-light'\n              onChange={this.handlePageChange}\n            />\n          </div>\n\n        </div>\n        <div className=\"col-md-6\">\n          {currentContact ? (\n            <div>\n              <h4>Contact</h4>\n              <div>\n                <label>\n                  <strong>First Name:</strong>\n                </label>{\" \"}\n                {currentContact.firstName}\n              </div>\n              <div>\n                <label>\n                  <strong>Last Name:</strong>\n                </label>{\" \"}\n                {currentContact.lastName}\n              </div>\n              <div>\n                <label>\n                  <strong>Company:</strong>\n                </label>{\" \"}\n                {currentContact.company}\n              </div>\n              <div>\n                <label>\n                  <strong>Title:</strong>\n                </label>{\" \"}\n                {currentContact.title}\n              </div>\n\n              <Link\n                to={\"/contacts/\" + currentContact.id}\n                className=\"badge badge-warning\"\n              >\n                Edit\n              </Link>\n            </div>\n          ) : (\n              <div>\n                <br />\n                <p>Please click on a Contact...</p>\n              </div>\n            )}\n        </div>\n      </div>\n    );\n  }\n  /*\n    render() {\n      const {\n        searchTitle,\n        tutorials,\n        currentContact,\n        currentIndex,\n        page,\n        count,\n        pageSize,\n      } = this.state;\n  \n      return (\n        <div className=\"list row\">\n          <div className=\"col-md-8\">\n            <div className=\"input-group mb-3\">\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                placeholder=\"Search by title\"\n                value={searchTitle}\n                onChange={this.onChangeSearchTitle}\n              />\n              <div className=\"input-group-append\">\n                <button\n                  className=\"btn btn-outline-secondary\"\n                  type=\"button\"\n                  onClick={this.retrieveTutorials}\n                >\n                  Search\n                </button>\n              </div>\n            </div>\n          </div>\n          <div className=\"col-md-6\">\n            <h4>Tutorials List</h4>\n  \n            <div className=\"mt-3\">\n              {\"Items per Page: \"}\n              <select onChange={this.handlePageSizeChange} value={pageSize}>\n                {this.pageSizes.map((size) => (\n                  <option key={size} value={size}>\n                    {size}\n                  </option>\n                ))}\n              </select>\n  \n              <Pagination\n                className=\"my-3\"\n                count={count}\n                page={page}\n                siblingCount={1}\n                boundaryCount={1}\n                variant=\"outlined\"\n                shape=\"rounded\"\n                onChange={this.handlePageChange}\n              />\n            </div>\n  \n            <ul className=\"list-group\">\n              {tutorials &&\n                tutorials.map((tutorial, index) => (\n                  <li\n                    className={\n                      \"list-group-item \" +\n                      (index === currentIndex ? \"active\" : \"\")\n                    }\n                    onClick={() => this.setActiveTutorial(tutorial, index)}\n                    key={index}\n                  >\n                    {tutorial.title}\n                  </li>\n                ))}\n            </ul>\n  \n          </div>\n          \n          ...\n        </div>\n      );\n    }\n  */\n\n  /*\n    generateHeaders() {\n      return {\n  \n        headers: new HttpHeaders(\n          {\n            'Content-Type': 'application/json',\n            'Access-Control-Allow-Origin': '*',\n            'Authorization': 'Bearer ' + Cookie.get('access_token')\n          })\n      };\n    }\n  */\n}","/home/rcampion/git/react-js-contacts/src/services/contact.service.js",[],"/home/rcampion/git/react-js-contacts/src/http-common.js",[],{"ruleId":"46","severity":1,"message":"47","line":5,"column":8,"nodeType":"48","messageId":"49","endLine":5,"endColumn":23},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"46","severity":1,"message":"54","line":4,"column":8,"nodeType":"48","messageId":"49","endLine":4,"endColumn":12},{"ruleId":"55","severity":1,"message":"56","line":100,"column":49,"nodeType":"57","messageId":"58","endLine":100,"endColumn":50},{"ruleId":"55","severity":1,"message":"56","line":100,"column":83,"nodeType":"57","messageId":"58","endLine":100,"endColumn":84},{"ruleId":"46","severity":1,"message":"59","line":250,"column":7,"nodeType":"48","messageId":"49","endLine":250,"endColumn":11},{"ruleId":"46","severity":1,"message":"60","line":251,"column":7,"nodeType":"48","messageId":"49","endLine":251,"endColumn":12},"no-unused-vars","'reportWebVitals' is defined but never used.","Identifier","unusedVar","no-native-reassign",["61"],"no-negated-in-lhs",["62"],"'logo' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'page' is assigned a value but never used.","'count' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]